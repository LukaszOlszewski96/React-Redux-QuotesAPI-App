{"version":3,"sources":["components/Text/Text.js","components/Button/Button.js","redux/type/types.js","redux/action/actions.js","components/RandomApp.js","App.js","redux/reducer/reducer.js","redux/store/store.js","index.js"],"names":["Text","console","log","this","props","color","id","className","quote","author","Component","Button","onClick","click","text","type","types","RandomApp","state","quotes","displayed","random","event","length","setState","Math","floor","preventDefault","next","previous","fetch","then","res","json","result","connect","dispatch","actions","App","init","action","store","createStore","composeWithDevTools","window","reducer","ReactDOM","render","document","getElementById"],"mappings":"oLAEMA,E,4JACF,WAGI,OADAC,QAAQC,IAAIC,KAAKC,MAAMC,OAEnB,sBAAKC,GAAG,OAAR,UACI,mBAAGC,UAAU,aAAb,SAA2BJ,KAAKC,MAAMI,MAAMA,QAC5C,mBAAGD,UAAU,eAAb,SAA6BJ,KAAKC,MAAMI,MAAMC,gB,GAP3CC,aAaJV,ICbTW,E,4JACF,WACI,OACI,qBAAKJ,UAAU,UAAf,SACI,wBAAQA,UAAU,qBAAqBK,QAAST,KAAKC,MAAMS,MAA3D,SAAmEV,KAAKC,MAAMU,a,GAJzEJ,aAUNC,I,QCTA,EAHF,OAGE,EAFF,OCQC,EAPD,SAAAH,GAAK,MAAK,CACnBO,KAAMC,EAAYR,UCehBS,E,kDAEF,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAGRc,MAAQ,CACHC,OAAQ,GACRX,MAAO,GACPY,UAAW,GAPG,EAUnBC,OAAS,SAACC,GACH,EAAKJ,MAAME,YAAc,EAAKhB,MAAMe,OAAOI,OAAO,GACnD,EAAKC,SAAS,CACZJ,UAAW,EAAKF,MAAME,UAAU,EAChCZ,MAAO,EAAKU,MAAMC,OAAOM,KAAKC,MAAMD,KAAKJ,UAAa,EAAKH,MAAMC,OAAOI,OAAQ,IAAM,KAE1FD,EAAMK,iBACN,EAAKvB,MAAMwB,KAAK,EAAKV,MAAMV,QAEzB,EAAKgB,SAAS,CACZhB,MAAO,EAAKJ,MAAMe,OAAO,EAAKD,MAAME,WACpCA,UAAW,EAAKF,MAAME,UAAW,KArBtB,EA0BlBS,SAAW,WACR,EAAKL,SAAS,CACZhB,MAAO,EAAKJ,MAAMe,OAAO,EAAKD,MAAME,WACpCA,UAAW,EAAKF,MAAME,UAAY,KA7BrB,E,qDAiCnB,WAAqB,IAAD,OAClBU,MA9CM,yIA+CHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKV,SAAS,CACZL,OAAQe,EACR1B,MAAO0B,EAAOT,KAAKC,MAAMD,KAAKJ,UAAaa,EAAOX,OAAQ,IAAM,KAElE,EAAKnB,MAAMwB,KAAK,EAAKV,MAAMV,OAC3B,EAAKgB,SAAS,CACZJ,UAAW,EAAKF,MAAME,UAAW,S,oBAK3C,WACE,OACE,qCACI,cAAC,EAAD,CAAMZ,MAAOL,KAAKe,MAAMV,QACxB,cAAC,EAAD,CAAQK,MAAOV,KAAKkB,OAAQP,KAAK,SACjC,cAAC,EAAD,CAAQD,MAAOV,KAAK0B,SAAUf,KAAK,oB,GAxDvBJ,aA8DTyB,eAlES,SAAAjB,GAAK,MAAK,CAChCC,OAAQD,EAAMC,WALW,SAAAiB,GAAQ,MAAK,CACtCR,KAAM,SAAApB,GAAK,OAAI4B,EAASC,EAAa7B,QAqExB2B,CAA6ClB,GCnE7CqB,MAVf,WAGE,OACE,8BACE,cAAC,EAAD,O,6BCJAC,EAAO,CACXpB,OAAQ,CAAC,CAAC,MAAS,QAAS,OAAU,QACtC,CAAC,MAAS,OAAQ,OAAU,UAI9B,SAASA,IAA8B,IAAvBD,EAAsB,uDAAdqB,EAAMC,EAAQ,uCACpC,OAAOA,EAAOzB,MACZ,KAAKC,EACH,kCACKE,GADL,IACYC,OAAO,GAAD,mBAAMD,EAAMC,QAAZ,CAAoBqB,EAAOhC,UAE/C,KAAKQ,EACH,kCACKE,GADL,IACYC,OAAQ,KAEtB,QACE,OAAOD,GAMb,IAAMuB,EAAQC,sBAAYvB,EAAQwB,iCAClCC,OAAOH,MAAQA,EAEA,MAACtB,EC1BVsB,EAAQC,sBAAYG,EAAgBF,iCAC1CC,OAAOH,MAAQA,EAEAA,QCAfK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.b2d6dda9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Text extends Component{\n    render(){\n\n        console.log(this.props.color)\n        return(\n            <div id=\"text\">\n                <p className=\"quote-text\">{this.props.quote.quote}</p>\n                <p className=\"quote-author\">{this.props.quote.author}</p>\n            </div>\n        )\n    }\n}\n\nexport default Text","import React, { Component } from 'react';\n\nclass Button extends Component{\n    render(){\n        return(\n            <div className=\"buttons\"> \n                <button className=\"buttons__new-quote\" onClick={this.props.click}>{this.props.text}</button>\n            </div>\n        )\n    }\n}\n\nexport default Button","const NEXT = 'NEXT'\nconst PREV = 'PREV'\n\nexport default {\n    NEXT,\n    PREV\n}","import types from '../type/types'\n\nconst next = quote => ({\n    type: types.NEXT, quote\n})\nconst prev = () => ({\n    type: types.PREV\n})\n\nexport default{\n    next,\n    prev\n}","import React, { Component } from 'react';\nimport Text from './Text/Text'\nimport Button from './Button/Button'\n\nimport { connect } from 'react-redux';\nimport actions from '../redux/action/actions'\n\n\nconst URL = \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\n\nconst mapDispatchToProps = dispatch => ({\n  next: quote => dispatch(actions.next(quote))\n})\n\nconst mapStateToProps = state => ({\n  quotes: state.quotes\n})\n\nclass RandomApp extends Component{\n\n    constructor(props) {\n      super(props);\n    }\n\n    state = {\n         quotes: [],\n         quote: {},\n         displayed: 1\n    }\n//---------------------------------------------\n    random = (event) => {\n        if(this.state.displayed === this.props.quotes.length-1){\n          this.setState({\n            displayed: this.state.displayed+1,\n            quote: this.state.quotes[Math.floor(Math.random() * ( this.state.quotes.length -1)) + 1],\n        })\n        event.preventDefault()\n        this.props.next(this.state.quote)\n        }else{\n          this.setState({\n            quote: this.props.quotes[this.state.displayed],\n            displayed: this.state.displayed +1\n          })\n        }\n    }\n//---------------------------------------------\n     previous = () => {\n        this.setState({\n          quote: this.props.quotes[this.state.displayed],\n          displayed: this.state.displayed - 1\n        })\n    }\n//---------------------------------------------\n    componentDidMount() {\n      fetch(URL)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              quotes: result,\n              quote: result[Math.floor(Math.random() * ( result.length -1)) + 1]\n            });\n            this.props.next(this.state.quote)\n            this.setState({\n              displayed: this.state.displayed +1\n            })\n          })\n    }\n\n    render(){\n      return(\n        <>\n            <Text quote={this.state.quote} />\n            <Button click={this.random} text=\"Next\" />\n            <Button click={this.previous} text=\"Previous\" />\n        </>\n      )\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomApp)","import React from 'react';\nimport RandomApp from './components/RandomApp'\n\nfunction App() {\n\n\n  return (\n    <div >\n      <RandomApp/>\n    </div>\n  );\n}\n\nexport default App;\n","import {createStore} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport types from '../type/types'\n\nconst init = {\n  quotes: [{\"quote\": \"TEXT \", \"author\": \"TEXT\"},\n  {\"quote\": \"text\", \"author\": \"Text\"}]\n  \n}\n\nfunction quotes(state = init, action) {\n  switch(action.type) {\n    case types.NEXT:\n      return{\n        ...state, quotes: [...state.quotes, action.quote]\n      }\n    case types.PREV:\n      return{\n        ...state, quotes: []\n      }\n    default: \n      return state\n  }\n}\n\n\n\nconst store = createStore(quotes, composeWithDevTools())\nwindow.store = store\n\nexport default {quotes}","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from '../reducer/reducer'\n\nconst store = createStore(reducer.quotes, composeWithDevTools())\nwindow.store = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}